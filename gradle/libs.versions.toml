[versions]
targetSdk = "34"
jvmBytecode = "17"
agp = "8.6.0"
kotlin = "1.9.25"
androidxFragment = "1.8.3"
androidxLifecycle = "2.8.5"
androidXDataBinding = "8.6.0"
androidxRoom = "2.6.1"
androidxArchCore = "2.2.0"
androidXStartup = "1.1.1"
ksp = "1.9.25-1.0.20"
hilt = "2.52"
coreKtx = "1.13.1"
junit = "4.13.2"
junitVersion = "1.2.5"
appcompat = "1.7.0"
material = "1.12.0"
spotless = "6.25.0"
coroutines = "1.9.0"
dokka = "1.9.0"
nexusPlugin = "0.25.3"
kotlinBinaryCompatibility = "0.13.1"
glide = "4.16.0"
glidePalette = "2.1.2"

espresso = "3.6.1"
androidxTest = "1.6.1"
androidxTestJunit = "1.2.1"
androidTestRunner = "1.3.0-beta01"
robolectric = "4.13"
espressoCore = "3.6.1"


[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-test = { id = "com.android.test", version.ref = "agp" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
hilt-plugin = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
nexus-plugin = { id = "com.vanniktech.maven.publish", version.ref = "nexusPlugin" }
kotlin-binary-compatibility = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinBinaryCompatibility" }


[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "androidxFragment" }
androidx-lifecycle = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidxLifecycle" }
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "androidXStartup" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-databinding-runtime = { group = "androidx.databinding", name = "databinding-runtime", version.ref = "androidXDataBinding" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidxRoom" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidxRoom" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidxRoom" }
androidx-arch-core = { module = "androidx.arch.core:core-testing", version.ref = "androidxArchCore" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }
hilt-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-palette = { module = "com.github.florent37:glidepalette", version.ref = "glidePalette" }

# unit test
junit = { module = "junit:junit", version.ref = "junit" }
android-test-runner = { module = "com.android.support.test:runner", version.ref = "androidTestRunner" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidxTest" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
robolectric = { group = "org.robolectric", name = "robolectric", version.ref = "robolectric" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }

